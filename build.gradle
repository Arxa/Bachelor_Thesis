import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'ca.cutterslade.gradle:gradle-dependency-analyze:1.2.0'
    }
}

apply plugin: 'java'
// Uncomment the following plugin to test for unused libraries (gradle analyze)
//apply plugin: 'ca.cutterslade.analyze'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'javafx-gradle-plugin'


sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = "Main"

repositories{
    mavenLocal()
    mavenCentral()
}

//jar {
//    manifest {
//        attributes(
//                'Main-Class': 'Main',
//        )
//    }
//}
//
//task fatJar(type: Jar) {
//    manifest.from jar.manifest
//    classifier = 'all'
//    from {
//        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
//    } {
//        exclude "META-INF/*.SF"
//        exclude "META-INF/*.DSA"
//        exclude "META-INF/*.RSA"
//    }
//    with jar
//}
//
//artifacts {
//    archives fatJar
//}


ext {

    if (Os.isFamily(Os.FAMILY_UNIX)) {
        os = 'linux'
    }
    if (Os.isFamily(Os.FAMILY_MAC)) {
        os = 'macosx'
    }
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        os = 'windows'
    }
    arch = System.getProperty("os.arch");

    if(arch == 'amd64'){
        arch = 'x86_64'
    }
    opencvBinaryClassifer = os+'-'+arch;

}

dependencies {

    // Local Libraries
    compile fileTree('lib')

    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile group: 'org.bytedeco.javacpp-presets', name: 'tesseract', version: '3.03-rc1-0.11'
    compile group: 'org.bytedeco.javacpp-presets', name: 'tesseract', version: '3.03-rc1-0.11', classifier: opencvBinaryClassifer
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.71-0.11', classifier: opencvBinaryClassifer

    compile group: 'org.languagetool', name: 'language-en', version: '3.8'
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.6'

//    testCompile group: "org.loadui", name: "testFx", version: "3.1.2"
//    testCompile 'org.testfx:testfx-core:4.0.1-alpha'
//    testRuntime 'org.testfx:openjfx-monocle:1.8.0_20'
    testCompile group: 'org.loadui', name: 'testFx', version: '3.1.2'

    testCompile group: 'org.testfx', name: 'testfx-core', version: '4.0.8-alpha'

}
test {
    testLogging.showStandardStreams = true
}

jfx {
    mainClass = 'Main'
    vendor = 'arxa'
    bundler = 'windows.app'
    bundleArguments = [
            'runtime': 'C:\\Program Files\\Java\\jdk1.8.0_144\\jre'
    ]
}